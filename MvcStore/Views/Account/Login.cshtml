@using MvcStore.Models
@model LoginViewModel
@{
    Layout = null;
    ViewBag.Title = "Log in";
}


<!DOCTYPE html>

<html>

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Login</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    @Styles.Render("~/Content/css")


    <!-- Page CSS -->
    <style>

        /* body settings for the page */
        body {
            
            background-color: #00a7e469;
        }

        /* login box */
        .loginBox {
            margin: auto;
            margin-top:200px;
            width: 70%;
            background-color: white;
            padding: 50px;
            
        }

        /* text definitions */
        .fieldText {
            font-size: 20px;
            font-variant: small-caps;
            color: #1ea8e1;
        }

        .buttonText {
            font-size: 18px;
            font-variant: small-caps;
        }

        a:hover {
            text-decoration: none;
        }


        .form-control:focus {
            color: #495057;
            background-color: #fff;
            border-color: #90aece;
            outline: 0;
            -webkit-box-shadow: none;
            box-shadow: none;
        }

        .form-control {
            box-shadow: none;
            border-radius: 0;
            border: 0;
            border-bottom: 1px solid gray;
        }

        .btn {
            border-radius: 0;
        }
    </style>

</head>

<body >
    <div class="container">
        <div class="loginBox">
            <div align="center" style="margin-bottom:15px">
                <span class="fieldText">Login!</span>
            </div>
            <div style="padding: 0 15px 0 15px;">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.LabelFor(m => m.Email, new { @class = "fieldText" })
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                        </div>

                        @Html.LabelFor(m => m.Password, new { @class = "fieldText" })
                        <div class="form-group">

                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <div style="margin-left: 20px;">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    @Html.LabelFor(m => m.RememberMe)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                <input type="submit" value="Log in" class="btn btn-block btn-primary" />
                            </div>
                        </div>
                        <span style="margin-left: -15px">
                            @Html.ActionLink("Register as a new user", "Register")
                        </span>

                    }
                </section>
            </div>
        </div>
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

</body>

</html>